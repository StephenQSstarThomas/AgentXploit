import subprocess
from typing import Literal

def file_handler(
    operation: Literal["copy_to_container", "copy_from_container", "read", "write", "list", "exists"],
    container_name: str,
    source: str,
    destination: str,
    content: str
) -> dict:
    """Handle file operations between host and Docker containers.

    Operations:
    - copy_to_container: Copy file from host to container
    - copy_from_container: Copy file from container to host
    - read: Read file content from container
    - write: Write content to file in container
    - list: List directory contents in container
    - exists: Check if file exists in container

    Returns dict with success, content, files, exists, and error fields.
    """
    if operation == "copy_to_container":
        result = subprocess.run(["docker", "cp", source, f"{container_name}:{destination}"], capture_output=True, text=True)
        return {
            "success": result.returncode == 0,
            "content": None,
            "files": None,
            "exists": None,
            "error": result.stderr.strip() if result.returncode != 0 else None
        }

    elif operation == "copy_from_container":
        result = subprocess.run(["docker", "cp", f"{container_name}:{source}", destination], capture_output=True, text=True)
        return {
            "success": result.returncode == 0,
            "content": None,
            "files": None,
            "exists": None,
            "error": result.stderr.strip() if result.returncode != 0 else None
        }

    elif operation == "read":
        result = subprocess.run(["docker", "exec", container_name, "cat", source], capture_output=True, text=True)
        return {
            "success": result.returncode == 0,
            "content": result.stdout if result.returncode == 0 else None,
            "files": None,
            "exists": None,
            "error": result.stderr.strip() if result.returncode != 0 else None
        }

    elif operation == "write":
        result = subprocess.run(
            ["docker", "exec", container_name, "bash", "-c", f"echo '{content}' > {destination}"],
            capture_output=True, text=True
        )
        return {
            "success": result.returncode == 0,
            "content": None,
            "files": None,
            "exists": None,
            "error": result.stderr.strip() if result.returncode != 0 else None
        }

    elif operation == "list":
        result = subprocess.run(["docker", "exec", container_name, "ls", "-la", source], capture_output=True, text=True)
        return {
            "success": result.returncode == 0,
            "content": None,
            "files": result.stdout.strip().split("\n") if result.returncode == 0 else None,
            "exists": None,
            "error": result.stderr.strip() if result.returncode != 0 else None
        }

    elif operation == "exists":
        result = subprocess.run(["docker", "exec", container_name, "test", "-e", source], capture_output=True, text=True)
        return {
            "success": True,
            "content": None,
            "files": None,
            "exists": result.returncode == 0,
            "error": None
        }

    raise
